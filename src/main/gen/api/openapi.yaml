openapi: 3.1.0
info:
  description: projet_pvz API
  title: projet_pvz API
  version: 1.0.0
servers:
- url: https://projet_pvz
paths:
  /api/plantes:
    get:
      operationId: getAllPlantes
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PlanteDTO'
                type: array
          description: OK
      summary: GET api/plantes
      x-accepts:
      - '*/*'
    post:
      operationId: createPlante
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanteDTO'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlanteDTO'
          description: Created
      summary: POST api/plantes
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /api/plantes/{id}:
    delete:
      operationId: deletePlante
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
      summary: "DELETE api/plantes/{id}"
      x-accepts:
      - application/json
    get:
      operationId: getPlanteById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlanteDTO'
          description: OK
      summary: "GET api/plantes/{id}"
      x-accepts:
      - '*/*'
    put:
      operationId: updatePlante
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanteDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlanteDTO'
          description: OK
      summary: "PUT api/plantes/{id}"
      x-content-type: application/json
      x-accepts:
      - '*/*'
components:
  schemas:
    PlanteDTO:
      example:
        degatAttaque: 1
        cout: 5
        pointDeVie: 0
        attaqueParSeconde: 6.027456183070403
        soleilParSeconde: 5.637376656633329
        effet: NORMAL
        cheminImage: cheminImage
        nom: nom
      properties:
        nom:
          type: string
          nullable: true
        pointDeVie:
          format: int32
          type: integer
          nullable: true
        attaqueParSeconde:
          format: double
          type: number
          nullable: true
        degatAttaque:
          format: int32
          type: integer
          nullable: true
        cout:
          format: int32
          type: integer
          nullable: true
        soleilParSeconde:
          format: double
          type: number
          nullable: true
        effet:
          enum:
          - NORMAL
          - SLOW_LOW
          - SLOW_MEDIUM
          - SLOW_STOP
          type: string
          nullable: true
        cheminImage:
          type: string
          nullable: true

